import marshal, base64
exec(base64.b64decode("ZnJvbSByZXF1ZXN0cyBpbXBvcnQgU2Vzc2lvbg0KDQpkZWYgQ2hlY2tQdWJsaWNJUCgpOg0KICAgIHRyeToNCiAgICAgICAgd2l0aCBTZXNzaW9uKCkgYXMgc2VzOg0KICAgICAgICAgICAgcmVzID0gc2VzLmdldCgiaHR0cHM6Ly9hcGkuaXBpZnkub3JnLz9mb3JtYXQ9anNvbiIpDQogICAgICAgICAgICBpZiAocmVzLnN0YXR1c19jb2RlID09IDIwMCk6DQogICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKClbImlwIl0NCiAgICAgICAgICAgIHJldHVybiBOb25lDQogICAgZXhjZXB0Og0KICAgICAgICByZXR1cm4gTm9uZQ0KICAgIHBhc3MNCiAgICANCmRlZiBJc1Byb3h5V29ya2luZyhwcm94eSk6DQogICAgdHJ5Og0KICAgICAgICB3aXRoIFNlc3Npb24oKSBhcyBzZXM6DQogICAgICAgICAgICBzZXMucHJveGllcy51cGRhdGUocHJveHkpDQogICAgICAgICAgICByZXMgPSBzZXMuZ2V0KCJodHRwczovL2FwaS5pcGlmeS5vcmcvP2Zvcm1hdD1qc29uIikNCiAgICAgICAgICAgIGlmIChyZXMuc3RhdHVzX2NvZGUgPT0gMjAwKToNCiAgICAgICAgICAgICAgICBpZihyZXMuanNvbigpWyJpcCJdICE9IENoZWNrUHVibGljSVAoKSBhbmQgQ2hlY2tQdWJsaWNJUCAhPSBOb25lKToNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFRydWUNCiAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KICAgIGV4Y2VwdDoNCiAgICAgICAgcmV0dXJuIEZhbHNlDQogICAgcGFzcw0KDQpkZWYgUHJpbnRTdWNjZXNzKG1lc3NhZ2UsIHVzZXJuYW1lLCAqYXJndik6DQogICAgcHJpbnQoIlsgT0sgXSAiLCBlbmQ9IiIpDQogICAgcHJpbnQoIlsiLCBlbmQ9IiIpDQogICAgcHJpbnQodXNlcm5hbWUsIGVuZD0iIikNCiAgICBwcmludCgiXSAiLCBlbmQ9IiIpDQogICAgcHJpbnQobWVzc2FnZSwgZW5kPSIgIikNCiAgICBmb3IgYXJnIGluIGFyZ3Y6DQogICAgICAgIHByaW50KGFyZywgZW5kPSIgIikNCiAgICBwcmludCgiIikNCiAgICBwYXNzDQoNCiMgU3BhbSAxDQojIEtlbmRpbmUgemFyYXIgdmVybWUgIDINCiMgxLBsYcOnIDMNCiMgw4fEsXBsYWtsxLFrIDQNCiMgw5ZuZW0gZGVyZWNlc2kgNQ0KIyBOZWZyZXQgc8O2eWxlbWkgNg0KIyBUYWNpeiB2ZSBab3JiYWzEsWsgNw0KIyBLaW1saWsgdGFrbGlkaSA4DQojIFlhxZ9zxLF6IMOHb2N1ayAxMQ0KDQpkZWYgUHJpbnRDaG9pY2VzKCk6DQogICAgcHJpbnQoIiIiICAgIA0KICAgICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKy0tLS0tLS0tKw0KICAgIHwgICAgICAgIFJlYXNvbiAgICAgICAgICAgICAgfCBOdW1hcmEgfA0KICAgICstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKy0tLS0tLS0tKw0KICAgIHwgU3BhbSAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgIDEgfA0KICAgIHwgS2VuZGluZSB6YXJhciB2ZXJtZSAgICAgICAgfCAgICAgIDIgfA0KICAgIHwgxLBsYcOnICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgMyB8DQogICAgfCDDh8SxcGxha2zEsWsgICAgICAgICAgICAgICAgICB8ICAgICAgNCB8DQogICAgfCDDlm5lbSBkZXJlY2VzaSAgICAgICAgICAgICAgfCAgICAgIDUgfA0KICAgIHwgTmVmcmV0IHPDtnlsZW1pICAgICAgICAgICAgIHwgICAgICA2IHwNCiAgICB8IFRhY2l6IHZlIFpvcmJhbMSxayAgICAgICAgICB8ICAgICAgNyB8DQogICAgfCBLaW1saWsgdGFrbGlkaSAgICAgICAgICAgICB8ICAgICAgOCB8DQogICAgfCBZYcWfc8SxeiDDh29jdWsgICAgICAgICAgICAgICB8ICAgICAxMSB8DQogICAgKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rLS0tLS0tLS0rDQogICAgIiIiKQ0KDQpkZWYgR2V0SW5wdXQobWVzc2FnZSwgKmFyZ3YpOg0KICAgIHByaW50KCJbID8gXSAiLCBlbmQ9IiIpDQogICAgcHJpbnQobWVzc2FnZSwgZW5kPSIgIikNCiAgICBmb3IgYXJnIGluIGFyZ3Y6DQogICAgICAgIHByaW50KGFyZywgZW5kPSIgIikNCiAgICByZXR1cm4gaW5wdXQoKQ0KDQpkZWYgUHJpbnRGYXRhbEVycm9yKG1lc3NhZ2UsICphcmd2KToNCiAgICBwcmludCgiWyBYIF0gIiwgZW5kPSIiKQ0KICAgIHByaW50KG1lc3NhZ2UsIGVuZD0iICIpDQogICAgZm9yIGFyZyBpbiBhcmd2Og0KICAgICAgICBwcmludChhcmcsIGVuZD0iICIpDQogICAgcHJpbnQoIiIpDQogICAgcGFzcw0KDQpkZWYgUHJpbnRFcnJvcihtZXNzYWdlLCB1c2VybmFtZSwgKmFyZ3YpOg0KICAgIHByaW50KCJbIFggXSAiLCBlbmQ9IiIpDQogICAgcHJpbnQoIlsiLCBlbmQ9IiIpDQogICAgcHJpbnQodXNlcm5hbWUsIGVuZD0iIikNCiAgICBwcmludCgiXSAiLCBlbmQ9IiIpDQogICAgcHJpbnQobWVzc2FnZSwgZW5kPSIgIikNCiAgICBmb3IgYXJnIGluIGFyZ3Y6DQogICAgICAgIHByaW50KGFyZywgZW5kPSIgIikNCiAgICBwcmludCgiIikNCiAgICBwYXNzDQoNCmRlZiBQcmludFN0YXR1cyhtZXNzYWdlLCAqYXJndik6DQogICAgcHJpbnQoIlsgKiBdICIsIGVuZD0iIikNCiAgICBwcmludChtZXNzYWdlLCBlbmQ9IiAiKQ0KICAgIGZvciBhcmcgaW4gYXJndjoNCiAgICAgICAgcHJpbnQoYXJnLCBlbmQ9IiAiKQ0KICAgIHByaW50KCIiKQ0KICAgIHBhc3MNCg0KZGVmIFByaW50QmFubmVyKCk6DQogICAgYmFubmVyID0gIiIiUlVOQk9JQ0hJDQogICAgIFJVTkJPSUNISQ0KUlVOQk9JQ0hJDQogICAgIFJVTkJPSUNISQ0KUlVOQk9JQ0hJDQogICAgIFJVTkJPSUNISQ0KUlVOQk9JQ0hJDQogICAgIiIiDQogICAgcHJpbnQoYmFubmVyKQ0KICAgIHBhc3MNCg0KZGVmIExvYWRVc2VycyhwYXRoKToNCiAgICByZXQgPSBbXQ0KICAgIHRyeToNCiAgICAgICAgd2l0aCBvcGVuKHBhdGgsICdyJykgYXMgZmlsZToNCiAgICAgICAgICAgIGZvciBsaW5lIGluIGZpbGUucmVhZGxpbmVzKCk6DQogICAgICAgICAgICAgICAgbGluZSA9IGxpbmUucmVwbGFjZSgiXG4iLCAiIikucmVwbGFjZSgiXHIiLCIiKQ0KICAgICAgICAgICAgICAgIHVzZXIgPSBsaW5lLnNwbGl0KCIgIilbMF0NCiAgICAgICAgICAgICAgICBwYXNzd29yZCA9IGxpbmUuc3BsaXQoIiAiKVsxXQ0KICAgICAgICAgICAgICAgIHJldC5hcHBlbmQoew0KICAgICAgICAgICAgICAgICAgICAidXNlciI6IHVzZXIsDQogICAgICAgICAgICAgICAgICAgICJwYXNzd29yZCI6IHBhc3N3b3JkDQogICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgICBwYXNzDQogICAgICAgICAgICBwYXNzDQogICAgICAgIHJldHVybiByZXQNCiAgICBleGNlcHQ6DQogICAgICAgIFByaW50RmF0YWxFcnJvcigiJ3VzZXJzLnR4dCcgRG9zeWFzxLEgQnVsdW5hbWFkxLEhIikNCiAgICAgICAgZXhpdCgwKQ0KICAgIHBhc3MNCg0KZGVmIExvYWRQcm94aWVzKHBhdGgpOg0KICAgIHJldCA9IFtdDQogICAgdHJ5Og0KICAgICAgICB3aXRoIG9wZW4ocGF0aCwgJ3InKSBhcyBmaWxlOg0KICAgICAgICAgICAgZm9yIGxpbmUgaW4gZmlsZS5yZWFkbGluZXMoKToNCiAgICAgICAgICAgICAgICBsaW5lID0gbGluZS5yZXBsYWNlKCJcbiIsICIiKS5yZXBsYWNlKCJcciIsIiIpDQogICAgICAgICAgICAgICAgaXAgPSBsaW5lLnNwbGl0KCI6IilbMF0NCiAgICAgICAgICAgICAgICBwb3J0ID0gbGluZS5zcGxpdCgiOiIpWzFdDQogICAgICAgICAgICAgICAgcmV0LmFwcGVuZCh7DQogICAgICAgICAgICAgICAgICAgICJpcCI6IGlwLA0KICAgICAgICAgICAgICAgICAgICAicG9ydCI6IHBvcnQNCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIHBhc3MNCiAgICAgICAgICAgIHBhc3MNCiAgICAgICAgcmV0dXJuIHJldA0KICAgIGV4Y2VwdDoNCiAgICAgICAgUHJpbnRGYXRhbEVycm9yKCIncHJveHkudHh0JyBEb3N5YXPEsSBCdWx1bmFtYWTEsSEiKQ0KICAgICAgICBleGl0KDApDQogICAgcGFzcw0K=="))
